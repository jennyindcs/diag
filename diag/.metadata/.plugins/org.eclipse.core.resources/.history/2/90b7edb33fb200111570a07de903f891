package httpServer;

import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.text.DecimalFormat;
import java.util.concurrent.Executors;

import com.sun.net.httpserver.Headers;
import com.sun.net.httpserver.HttpExchange;
import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpServer;

import controller.TestMain;
import data.FinalResult;
import data.GroupResult;
import data.StudentResult;

// This file is deprecated by Diagnoser.java
/* run the apache http server which holds the static log-in html first;
 * then run the this server class in eclipse;
 * access http://localhost/diagnosis/Log-in/index.html to access the web application
 */
public class HttpServerDemo {
	public static void main(String[] args) throws IOException {
		InetSocketAddress addr = new InetSocketAddress(8090);
		HttpServer server = HttpServer.create(addr, 0);
		//System.out.println(server.getAddress().toString());
		
		server.createContext("/", new MyHandler());
		server.setExecutor(Executors.newCachedThreadPool());
		server.start();
		System.out.println("Server is listening on port 8090");
		System.out.println(System.getProperty("user.dir"));
	}
}

class MyHandler implements HttpHandler {
	public String ip = "127.0.0.1";
	public void handle(HttpExchange exchange) throws IOException {

		String requestMethod = exchange.getRequestMethod();
		String path = exchange.getRequestURI().getRawPath();
		System.out.println("Get request for " + path);
		if (requestMethod.equalsIgnoreCase("GET")) {

			if (path.equals("/login")) {
				handleLogin(exchange);
			} else if (path.equals("/configure")) {
				handleConfigure(exchange);
			} else if (path.equals("/diagnose")) {
				handleDiagnose(exchange);
			}

		}

	}

	private void handleLogin(HttpExchange exchange) throws IOException {
		System.out.println("Get request for "
				+ exchange.getRequestURI().getRawPath());
		System.out.println("Parameter is "
				+ exchange.getRequestURI().getQuery());

		String parameters = exchange.getRequestURI().getQuery();

		String[] parameterArray = parameters.split("&");
		for (String p : parameterArray) {
			if (p.indexOf("login=") != -1) {
				String username = p.substring(6);
				System.out.println("username = " + username);

				Headers responseHeaders = exchange.getResponseHeaders();
				responseHeaders.set("Content-Type", "text/HTML");
				exchange.sendResponseHeaders(200, 0);

				OutputStream responseBody = exchange.getResponseBody();

				if (username.equals("shuangyan")) {
					String s =
							"<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN' 'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'>"
									+ "<html xmlns='http://www.w3.org/1999/xhtml'>"
									+ "<head>"
									+ "<meta http-equiv='Content-Type' content='text/html; charset=UTF-8' />"
									+ "<title>Choose what to do</title>"
									+ "<link rel='shortcut icon' href='/favicon.ico'>"
									+ "<link rel='stylesheet' type='text/css' href='http://"+ip+"/diagnosis/Logged-in/style.css' />"
									+ "</head>"
									+ "<body>"
									+ "<form id='login-form' action='http://"+ip+":8090/configure' method='get'>"
									+ "<fieldset><br />"
									+ "<a href='http://"+ip+":8090/configure'> Perform a diagnosing </a>"
									//+ "<br /><br /><br />"
									//+ "<a href='http://"+ip+":8090/view'> View previous diagnosing results </a>"
									+ "</fieldset></form></body></html>";
					responseBody.write(s.getBytes());
				} else {
					String s = "Username is wrong!";
					responseBody.write(s.getBytes());
				}

				responseBody.close();
			}
		}

	}

	private void handleConfigure(HttpExchange exchange) throws IOException {
		System.out.println("Get request for "
				+ exchange.getRequestURI().getRawPath());

		Headers responseHeaders = exchange.getResponseHeaders();
		responseHeaders.set("Content-Type", "text/HTML");
		exchange.sendResponseHeaders(200, 0);

		OutputStream responseBody = exchange.getResponseBody();

		String s =
				"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">"
						+ "<html xmlns=\"http://www.w3.org/1999/xhtml\">"
						+ "<head>"
						+ "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />"
						+

						"<title>Parameters</title>"
						+

						"<link rel=\"shortcut icon\" href=\"/favicon.ico\">"
						+ "<link rel=\"stylesheet\" type=\"text/css\" href=\"http://"+ip+"/diagnosis/configure/css/configure.css\" />"
						+ "</head>"
						+ "<body>"
						+ "<br/>"
						+ "<br/>"
						+ "<br/>"
						+ "<br/>"
						+ "<br/>"
						+ "<div id=\"container\">"
						+ "<h2>Define the parameters for diagnosing</h2>"
						+

						"<form id=\"form1\" action=\"http://"+ip+":8090/diagnose\" method=\"get\">"
						+

						"<fieldset><legend>Contact form</legend>"
						+ "<p class=\"first\">"
						+ "<label for=\"name\">Period</label>"
						+ "From <input type=\"text\" name=\"period_from\" id=\"name\" placeholder=\"DD-MM-YYYY\" style=\"width:90px\" />  "
						+ "to <input type=\"text\" name=\"period_to\" placeholder=\"DD-MM-YYYY\" id=\"name\" style=\"width:90px\" />"
						+ "</p>"
						+ "<p class=\"first\">"
						+ "<label for=\"name\">CP-5 percentage_groupsize_relative_majority</label>"
						+ "<input type=\"text\" name=\"p1\" id=\"name1\" size=\"10\" /> %"
						+ "</p>"
						+ "<p>"
						+ "<label for=\"email\">CP-5 percentage_avegroupfeedback__relatively_large</label>"
						+ "<input type=\"text\" name=\"p2\" id=\"email1\" size=\"30\" /> %"
						+ "</p>"
						+ "<p>"
						+ "<label for=\"web\">CP-6 grouppost_relatively_few</label>"
						+ "<input type=\"text\" name=\"p3\" id=\"web1\" size=\"30\" />"
						+ "</p>"
						+ "<p>"
						+ "<label for=\"web\">CP-6 percentage_grouppost__relative_majority</label>"
						+ "<input type=\"text\" name=\"p4\" id=\"web2\" size=\"30\" /> %"
						+ "</p>"
						+ "<p>"
						+ "<label for=\"web\">CP-6 percentage_groupsize__relative_majority</label>"
						+ "<input type=\"text\" name=\"p5\" id=\"web3\" size=\"30\" /> %"
						+ "</p>"
						+ "</fieldset>"
						+ "<fieldset1>"
						+ "<p>"
						+ "<input type=\"radio\" name=\"course\" class=\"styled\"/ value=\"1\"/> Course 1 <br/>"
						+ "<br/>"
						+ "<input type=\"radio\" name=\"course\" class=\"styled\" value=\"2\"/> Course 2"
						+ "<br/>"
						+ "<br/>"
						+ "<input type=\"radio\" name=\"course\" class=\"styled\" value=\"3\"/> Course 3"
						+ "<br/>"
						+ "<br/>"
						+ "<input type=\"radio\" name=\"course\" class=\"styled\" value=\"4\"/> Course 4"
						+ "<br/>"
						+ "<br/>"
						+ "<input type=\"radio\" name=\"course\" class=\"styled\" value=\"5\"/> Course 5"
						+ "<br/>"
						+ "<br/>"
						+ "</p>"
						+ "</fieldset1>"
						+ "<fieldset2>"
						+ "<p>"
						+ "<input type=\"checkbox\" name=\"problem\" class=\"styled\" value=\"1\" /> Problem 1 <br/>"
						+ "<br/>"
						+ "<input type=\"checkbox\" name=\"problem\" class=\"styled\" value=\"2\"/> Problem 2"
						+ "<br/>"
						+ "<br/>"
						+ "<input type=\"checkbox\" name=\"problem\" class=\"styled\" value=\"3\"/> Problem 3"
						+ "<br/>"
						+ "<br/>"
						+ "<input type=\"checkbox\" name=\"problem\" class=\"styled\" value=\"4\"/> Problem 4"
						+ "<br/>"
						+ "<br/>"
						+ "<input type=\"checkbox\" name=\"problem\" class=\"styled\" value=\"5\"/> Problem 5"
						+ "<br/>"
						+ "<br/>"
						+ "<input type=\"checkbox\" name=\"problem\" class=\"styled\" value=\"6\"/> Problem 6"
						+ "<br/>"
						+ "<br/>"
						+ "</p>"
						+ "</fieldset2>"
						+ "<p class=\"submit\"><button type=\"submit\">Diagnose</button></p>"
						+ "</form>" + "</div>" + "</body>" + "</html>";
		System.out.println(s);
		responseBody.write(s.getBytes());

		responseBody.close();

	}

	private void handleDiagnose(HttpExchange exchange) throws IOException {

		String parameters = exchange.getRequestURI().getQuery();

		String[] parameterArray = parameters.split("&");
		double p1 = 0;
		double p2 = 0;
		int p3 = 0;
		double p4 = 0;
		double p5 = 0;
		String courseId = "-1";
		for (String p : parameterArray) {
			//System.out.println(p);
			if (p.startsWith("p1=")) {
				//p1 = Float.parseFloat(p.substring(3)) / 100;
				p1 = Double.parseDouble(p.substring(3))/100;
			} else if (p.startsWith("p2=")) {
				//p2 = Float.parseFloat(p.substring(3)) / 100;
				p2 = Double.parseDouble(p.substring(3))/100;
			} else if (p.startsWith("p3=")) {
				//p3 = Integer.parseInt(p.substring(3)) / 100;
				p3 = Integer.parseInt(p.substring(3));
			} else if (p.startsWith("p4=")) {
				//p4 = Float.parseFloat(p.substring(3)) / 100;
				p4 = Double.parseDouble(p.substring(3))/100;
			} else if (p.startsWith("p5=")) {
				//p5 = Float.parseFloat(p.substring(3)) / 100;
				p5 = Double.parseDouble(p.substring(3))/100;
			} else if (p.startsWith("course=")) {
				courseId = p.substring(7);
			}
		}

		System.out.println("\n p1: "+p1+" p2: "+p2+" p3: "+p3+" p4: "+p4+" p5: "+p5);
		
		//System.out.println(System.getProperty("user.dir"));
		File groupFile = new File(System.getProperty("user.dir")+"/res/group.csv"); 
		File studentFile = new File(System.getProperty("user.dir")+"/res/student.csv");
		
		FinalResult result = TestMain.diagnose(courseId, p1, p2, p3, p4, p5, groupFile, studentFile);
		System.out.println();
		Headers responseHeaders = exchange.getResponseHeaders();
		responseHeaders.set("Content-Type", "text/HTML");
		exchange.sendResponseHeaders(200, 0);

		OutputStream responseBody = exchange.getResponseBody();
		String responseString =
				"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\""
						+ "    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">"
						+ "<html xmlns=\"http://www.w3.org/1999/xhtml\">"
						+ "<head>"
						+ "<meta name=\"generator\" content="
						+ "\"HTML Tidy for Windows (vers 14 February 2006), see www.w3.org\" />"
						+ "<meta http-equiv=\"Content-Type\" content="
						+ "\"text/html; charset=us-ascii\" />"
						+ "<title>Results</title>"
						+ "<link rel=\"stylesheet\" type=\"text/css\" href=\"http://"+ip+"/diagnosis/results/css/results.css\" />"
						+ "<script src=\"http://"+ip+"/diagnosis/results/js/RGraph.common.core.js\" type=\"text/javascript\">"
						+ "</script>"
						+ "<script src=\"http://"+ip+"/diagnosis/results/js/RGraph.common.annotate.js\" type=\"text/javascript\">"
						+ "</script>"
						+ "<script src=\"http://"+ip+"/diagnosis/results/js/RGraph.common.context.js\" type=\"text/javascript\">"
						+ "</script>"
						+ "<script src=\"http://"+ip+"/diagnosis/results/js/RGraph.common.tooltips.js\" type=\"text/javascript\">"
						+ "</script>"
						+ "<script src=\"http://"+ip+"/diagnosis/results/js/RGraph.common.zoom.js\" type=\"text/javascript\">"
						+ "</script>"
						+ "<script src=\"http://"+ip+"/diagnosis/results/js/RGraph.pie.js\" type=\"text/javascript\">"
						+ "</script>"
						+ "    "
						+ "    <script> "
						+ "        /**"
						+ "        * These are the callback functions for the context menu"
						+ "        */"
						+ "        function Callback1()"
						+ "        {"
						+ "            alert('Menu item 1 selected!');"
						+ "        }"
						+ " "
						+ "        function Callback2()"
						+ "        {"
						+ "            alert('Menu item 2 selected!');"
						+ "        }"
						+ " "
						+ " "
						+ "        /**"
						+ "        * The onload function creates the graph"
						+ "        */"
						+ "        window.onload = function ()"
						+ "        {" + "            " + " " + " ";
		String s =
				"var donut4 = new RGraph.Pie('donut4', ["
						+ result.chart1.getPercentageYes() + ","
						+ result.chart1.getPercentageMaybe() + ","
						+ result.chart1.getPercentageNo() + "]);";
		responseString = responseString + s;
		DecimalFormat format = new DecimalFormat();
		format.setMaximumFractionDigits(1);
		
		
		double percentYes = 100 * result.chart1.getPercentageYes();
		double percentMaybe = 100 * result.chart1.getPercentageMaybe();
		double percentNo = 100 * result.chart1.getPercentageNo();
		
		String percentYesString = format.format(percentYes);
		String percentMaybeString = format.format(percentMaybe);
		String percentNoString = format.format(percentNo);
		
		responseString =
				responseString
						+ "            donut4.Set('chart.variant','donut');"
						+ "            donut4.Set('chart.linewidth', 5);"
						+ "            donut4.Set('chart.strokestyle', 'white');"
						+ "            donut4.Set('chart.linewidth', 5);"
						+ "            donut4.Set('chart.labels', ['" +percentYesString +"%', '" +percentMaybeString+"%', '" +percentNoString+"%']);"
						+ "            donut4.Set('chart.colors',  ['rgb(255,0,0)','rgb(0,0,255)','rgb(0,255,0)']);"
						+ "            donut4.Set('chart.text.size', 8);"
						+ "            donut4.Set('chart.title', 'Problem 5');"
						+ "            donut4.Set('chart.gutter.left', 10);"
						+ "            donut4.Set('chart.gutter.right', 10);"
						+ "            donut4.Set('chart.gutter.top', 20);"
						+ "            donut4.Set('chart.gutter.bottom', 10);"
						+ "            " + "            donut4.Draw();";
		s =
				"var donut5 = new RGraph.Pie('donut5', ["
						+ result.chart2.getPercentageYes() + ","
						+ result.chart2.getPercentageMaybe() + ","
						+ result.chart2.getPercentageNo() + "]);";
		responseString = responseString + s;
		percentYes = 100 * result.chart2.getPercentageYes();
		percentMaybe = 100 * result.chart2.getPercentageMaybe();
		percentNo = 100 * result.chart2.getPercentageNo();
		
		percentYesString = format.format(percentYes);
		percentMaybeString = format.format(percentMaybe);
		percentNoString = format.format(percentNo);
		
		responseString =
				responseString
						+ "            donut5.Set('chart.variant','donut');"
						+ "            donut5.Set('chart.linewidth', 5);"
						+ "            donut5.Set('chart.strokestyle', 'white');"
						+ "            donut5.Set('chart.linewidth', 5);"
						+ "            donut5.Set('chart.labels', ['" +percentYesString +"%', '" +percentMaybeString+"%', '" +percentNoString+"%']);"
						+ "            donut5.Set('chart.colors',  ['rgb(255,0,0)','rgb(0,0,255)','rgb(0,255,0)']);"
						+ "            donut5.Set('chart.text.size', 8);"
						+ "            donut5.Set('chart.title', 'Problem 6');"
						+ "            donut5.Set('chart.gutter.left', 10);"
						+ "            donut5.Set('chart.gutter.right', 10);"
						+ "            donut5.Set('chart.gutter.top', 20);"
						+ "            donut5.Set('chart.gutter.bottom', 10);"
						+ "            donut5.Draw();" + "            ";
		s =
				"var donut6 = new RGraph.Pie('donut6', ["
						+ result.chart3.getPercentageYes() + ","
						+ result.chart3.getPercentageMaybe() + ","
						+ result.chart3.getPercentageNo() + "]);";
		responseString = responseString + s;
		percentYes = 100 * result.chart3.getPercentageYes();
		percentMaybe = 100 * result.chart3.getPercentageMaybe();
		percentNo = 100 * result.chart3.getPercentageNo();
		
		percentYesString = format.format(percentYes);
		percentMaybeString = format.format(percentMaybe);
		percentNoString = format.format(percentNo);
		responseString =
				responseString
						+ "            donut6.Set('chart.variant','donut');"
						+ "            donut6.Set('chart.linewidth', 5);"
						+ "            donut6.Set('chart.strokestyle', 'white');"
						+ "            donut6.Set('chart.linewidth', 5);"
						+ "            donut6.Set('chart.labels', ['" +percentYesString +"%', '" +percentMaybeString+"%', '" +percentNoString+"%']);"
						+ "            donut6.Set('chart.colors',  ['rgb(255,0,0)','rgb(0,0,255)','rgb(0,255,0)']);"
						+ "            donut6.Set('chart.text.size', 8);"
						+ "            donut6.Set('chart.title', 'Problem 1');"
						+ "            donut6.Set('chart.gutter.left', 20);"
						+ "            donut6.Set('chart.gutter.right', 20);"
						+ "            donut6.Set('chart.gutter.top', 20);"
						+ "            donut6.Set('chart.gutter.bottom', 10);"
						+ "            " + "            donut6.Draw();";
		s =
				"var donut7 = new RGraph.Pie('donut7', ["
						+ result.chart4.getPercentageYes() + ","
						+ result.chart4.getPercentageMaybe() + ","
						+ result.chart4.getPercentageNo() + "]);";
		responseString = responseString + s;
		percentYes = 100 * result.chart4.getPercentageYes();
		percentMaybe = 100 * result.chart4.getPercentageMaybe();
		percentNo = 100 * result.chart4.getPercentageNo();
		
		percentYesString = format.format(percentYes);
		percentMaybeString = format.format(percentMaybe);
		percentNoString = format.format(percentNo);
		responseString =
				responseString
						+ "            donut7.Set('chart.variant','donut');"
						+ "            donut7.Set('chart.linewidth', 5);"
						+ "            donut7.Set('chart.strokestyle', 'white');"
						+ "            donut7.Set('chart.linewidth', 5);"
						+ "            donut7.Set('chart.labels', ['" +percentYesString +"%', '" +percentMaybeString+"%', '" +percentNoString+"%']);"
						+ "            donut7.Set('chart.colors',  ['rgb(255,0,0)','rgb(0,0,255)','rgb(0,255,0)']);"
						+ "            donut7.Set('chart.text.size', 8);"
						+ "            donut7.Set('chart.title', 'Problem 2');"
						+ "            donut7.Set('chart.gutter.left', 20);"
						+ "            donut7.Set('chart.gutter.right', 20);"
						+ "            donut7.Set('chart.gutter.top', 20);"
						+ "            donut7.Set('chart.gutter.bottom', 10);"
						+ "            donut7.Draw();";
		s =
				"var donut8 = new RGraph.Pie('donut8', ["
						+ result.chart5.getPercentageYes() + ","
						+ result.chart5.getPercentageMaybe() + ","
						+ result.chart5.getPercentageNo() + "]);";
		responseString = responseString + s;
		percentYes = 100 * result.chart5.getPercentageYes();
		percentMaybe = 100 * result.chart5.getPercentageMaybe();
		percentNo = 100 * result.chart5.getPercentageNo();
		
		percentYesString = format.format(percentYes);
		percentMaybeString = format.format(percentMaybe);
		percentNoString = format.format(percentNo);
		responseString =
				responseString
						+ "            donut8.Set('chart.variant','donut');"
						+ "            donut8.Set('chart.linewidth', 5);"
						+ "            donut8.Set('chart.strokestyle', 'white');"
						+ "            donut8.Set('chart.linewidth', 5);"
						+ "            donut8.Set('chart.labels', ['" +percentYesString +"%', '" +percentMaybeString+"%', '" +percentNoString+"%']);"
						+ "            donut8.Set('chart.colors',  ['rgb(255,0,0)','rgb(0,0,255)','rgb(0,255,0)']);"
						+ "            donut8.Set('chart.text.size', 8);"
						+ "            donut8.Set('chart.title', 'Problem 3');"
						+ "            donut8.Set('chart.gutter.left', 20);"
						+ "            donut8.Set('chart.gutter.right', 20);"
						+ "            donut8.Set('chart.gutter.top', 20);"
						+ "            donut8.Set('chart.gutter.bottom', 10);"
						+ "            donut8.Draw();"
						+ "        }"
						+ "    </script> "
						+ "    "
						+ "   "
						+ "    "
						+ "    "
						+ "</head>"
						+ "<body>"
						+ "<br/>"
						+ "<br/>"
						+ "<br/>"
						+ "<br/>"
						+ "	<div id=\"container\">"
						+ "<h2>Diagnosing Results and Statistics</h1>"
						+ "<form id=\"form1\" action=\"/\" method=\"post\">	"
						+ "	<fieldset>"
						+ "		<fieldset1-1>"
						+ "		<div style=\"overflow:auto; height:230px;width:255px;\">"
						+ "			<table>"
						+ "				<caption>Problems for Groups</caption>"
						+ "				<thead>"
						+ "					<tr>"
						+ "					<td class=\"column1\"></td> "
						+ "					<th scope=\"col\">Problem 5</th>"
						+ "					<th scope=\"col\">Problem 6</th>"
						+ "					</tr>"
						+ "				</thead>"
						+ "				<tbody> ";
		
		s = "";
		GroupResult gr = null;
		for(int i=0;i<result.vecGR.size();i++){
			gr = result.vecGR.get(i);
			s = s + "					<tr>";
			s = s + "<th scope=\"row\" class=\"column1\">Group " + gr.getGroupID() + "</th>";
			int problem5 = gr.getResultCP5();
			if (problem5 == 1) {
				s = s + "<td bgcolor=\"#f7a8a8\"></td>";
			}
			else if (problem5 == 3) {
				s = s + "<td bgcolor=\"#afeed8\"></td>";
			}
			else {
				s = s + "<td bgcolor=\"#00c9ff\"></td>";
			}
			
			int problem6 = gr.getResultCP6();
			if (problem6 == 1) {
				s = s + "<td bgcolor=\"#f7a8a8\"></td>";
			}
			else if (problem6 == 3) {
				s = s + "<td bgcolor=\"#afeed8\"></td>";
			}
			else {
				s = s + "<td bgcolor=\"#00c9ff\"></td>";
			}
			
			//System.out.println(gr.getGroupID()+"\t"+gr.getResultCP5()+"\t"+gr.getResultCP6()+"\n");
			s = s + "					</tr>";
		}
		responseString = responseString + s;
		responseString = responseString
						+ "				</tbody>"
						+ "			</table>"
						+ "			</div>"
						+ "		</fieldset1-1>"
						+ "		"
						+ "		<fieldset1-2>"
						+ "			<table>"
						+ "				<tbody> "
						+ "					"
						+ "					<tr>"
						+ "						<td bgcolor=\"#afeed8\"><canvas id=\"donut4\" width=\"205\" height =\"160\">[No canvas support]</canvas> </td>"
						+ "						<td bgcolor=\"#afeed8\"><canvas id=\"donut5\" width=\"205\" height =\"160\">[No canvas support]</canvas></td>"
						+ "					</tr>"
						+ "					<tr>"
						+ "						<td bgcolor=\"#afeed8\" colspan=\"2\">"
						+ "						"
						+ "							<font color=\"red\" size=\"1\">Red</font>: <font size=\"1\">:Students with the problem</font>;"
						+ "		<font color=\"orange\" size=\"1\">Orange</font> <font size=\"1\">:Students may have the problem</font>;"
						+ "			"
						+ "			<font color=\"green\" size=\"1\">Green</font> <font size=\"1\">:Students without the problem</font>"
						+ "			</td>"
						+ "					</tr>"
						+ "				"
						+ "					"
						+ "				</tbody>"
						+ "			</table>"
						+ "		</fieldset1-2>"
						+ "		"
						+ "	</fieldset>"
						+ "	"
						+ "	<fieldset0>																			"
						+ "			"
						+ "		<fieldset11-1>	"
						+ "		<div style=\"overflow:auto; height:310px;width:320px;\">"
						+ "			<table>"
						+ "				<caption>Problems for Students</caption>"
						+ "				<thead>"
						+ "					<tr>"
						+ "					<td class=\"column1\"></td> "
						+ "					<th scope=\"col\">Problem 1</th>"
						+ "					<th scope=\"col\">Problem 2</th>"
						+ "					<th scope=\"col\">Problem 3</th>"
						+ "					<th scope=\"col\">Group id</th>"
						+ "					</tr>"
						+ "				</thead>	"
						+ "				<tbody> ";
		s = "";
		StudentResult sr = null;
		for(int i=0;i<result.vecSR.size();i++){
			sr = result.vecSR.get(i);
			s = s + "					<tr>";
			s = s + "<th scope=\"row\" class=\"column1\">Student " + sr.getStudentID() + "</th>";
			int problem1 = sr.getResultCP1();
			if (problem1 == 1) {
				s = s + "<td bgcolor=\"#f7a8a8\"></td>";
			}
			else if (problem1 == 3) {
				s = s + "<td bgcolor=\"#afeed8\"></td>";
			}
			else {
				s = s + "<td bgcolor=\"#00c9ff\"></td>";
			}
			
			int problem2 = sr.getResultCP2();
			if (problem2 == 1) {
				s = s + "<td bgcolor=\"#f7a8a8\"></td>";
			}
			else if (problem2 == 3) {
				s = s + "<td bgcolor=\"#afeed8\"></td>";
			}
			else {
				s = s + "<td bgcolor=\"#00c9ff\"></td>";
			}
			
			int problem3 = sr.getResultCP3();
			if (problem3 == 1) {
				s = s + "<td bgcolor=\"#f7a8a8\"></td>";
			}
			else if (problem3 == 3) {
				s = s + "<td bgcolor=\"#afeed8\"></td>";
			}
			else {
				s = s + "<td bgcolor=\"#00c9ff\"></td>";
			}
		
			
			//System.out.println(gr.getGroupID()+"\t"+gr.getResultCP5()+"\t"+gr.getResultCP6()+"\n");
			s = s + "<td > "+ sr.getGroupID() +" </td>";
			s = s + "					</tr>";
		}
		responseString = responseString + s;
		responseString = responseString
						+ "				</tbody>"
						+ "			</table>"
						+ "			</div>"
						+ "                </fieldset11-1>"
						+ "                <fieldset11-2>	"
						+ "		<table>"
						+ "				<tbody> "
						+ "					"
						+ "					<tr>"
						+ "						<td bgcolor=\"#afeed8\"><canvas id=\"donut6\" width=\"160\" height =\"150\">[No canvas support]</canvas> </td>"
						+ "						"
						+ "						"
						+ "						<td bgcolor=\"#afeed8\"><canvas id=\"donut7\" width=\"160\" height =\"150\">[No canvas support]</td>"
						+ "					</tr>"
						+ "					<tr>"
						+ "					<td bgcolor=\"#afeed8\"><canvas id=\"donut8\" width=\"160\" height =\"150\">[No canvas support]</canvas> </td>"
						+ "						<td bgcolor=\"#afeed8\" ><font color=\"red\" size=\"1\">Red</font>: <font size=\"1\">:Groups with the problem</font><br>"
						+ "		<font color=\"orange\" size=\"1\">Orange</font> <font size=\"1\">:Groups may have the problem</font><br>"
						+ "			"
						+ "			<font color=\"green\" size=\"1\">Green</font> <font size=\"1\">:Groups without the problem</font></td>"
						+ "					</tr>" + "				" + "					" + "				</tbody>"
						+ "			</table>" + "                </fieldset11-2>"
						+ "<fieldset11-1>	" + "		"
						+ "                </fieldset11-1>" + "		" + "		"
						+ "	</fieldset0>	" + "	" + "		" + "				" + "</form>	"
						+ "a;lksjdf;lkajsd;fkjas</div>" + "	" + "	" + "</body>" + "</html>";
		responseBody.write(responseString.getBytes());

		responseBody.close();
	}
}